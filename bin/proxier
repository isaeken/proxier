#!/bin/php
<?php

if (php_sapi_name() !== 'cli') {
    exit;
}

require_once __DIR__ . '/../vendor/autoload.php';

use GuzzleHttp\Psr7\Request;
use IsaEken\Proxier\Proxier;
use Minicli\App;
use Minicli\Command\CommandCall;
use Minicli\Exception\CommandNotFoundException;

$app = new App();
$app->setSignature('./proxier');

$app->registerCommand('proxy', function (CommandCall $input) {
    $url = $input->hasParam('url') ? $input->getParam('url') : null;
    $method = strtoupper($input->hasParam('method') ? $input->getParam('method') : 'GET');

    if (empty($url) || ! filter_var($url, FILTER_VALIDATE_URL)) {
        echo "Please specify a target url.\n";
        echo "Example: proxier proxy url=https://isaeken.com.tr\n";
        exit;
    }

    if (! in_array(strtoupper($method), ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'])) {
        echo "Please specify a valid method.\n";
        echo "Example: proxier proxy url=https://isaeken.com.tr method=GET\n";
        exit;
    }

    $output = $input->hasParam('output') ? $input->getParam('output') : 'php://stdout';

    $proxier = new Proxier();
    $proxier->boot();
    $request = new Request(
        $method,
        $url,
    );
    $response = $proxier->proxy($request);
    $resource = fopen($output, 'w+');

    if ($resource === false) {
        echo "Could not open output file.\n";
        exit;
    }

    fwrite($resource, $response->getBody());
});

try {
    $app->runCommand($argv);
} catch (CommandNotFoundException $e) {
    echo 'An error occurred running the command: ',  $e->getMessage(), "\n";
}
